# Basic example of server with python
# Will start a Web Server in the current directory on port 8000
# go to http://127.0.0.1:8000

# Python v2.7
python -m SimpleHTTPServer
# Python 3
python -m http.server 8000

# SMTP-Server for debugging, messages will be discarded, and printed on stdout.
python -m smtpd -n -c DebuggingServer localhost:1025

# Pretty print a json
python -m json.tool foo.json

# debug multi process[https://stackoverflow.com/questions/11106000/python-multiprocess-debugging]
pip install remote-pdb
from multiprocessing import Pool

def test(thing):
  from remote_pdb import set_trace
  set_trace()
  s = thing*2
  print(s)
  return s

if __name__ == '__main__':
  with Pool(5) as p:
    print(p.map(test,['dog','cat','bird']))

it print
```
RemotePdb session open at 127.0.0.1:54273, waiting for connection ...
```
in another terminal:
telnet 127.0.0.1 54273

# profile memory usage
python -m memory_profiler test.py

# profile via cProfile
import pstats
import cProfile
profiler = cProfile.Profile()
profiler.enable()
add_func(3, 8)
profiler.disable()
stats = pstats.Stats(profiler)
stats.sort_stats('cumtime')
stats.print_stats()
exit(0)

# profile via line_profiler
def add_func(a, b):
    return a + b
class Dog:
  def say(self, txt):
    print(txt)

from line_profiler import LineProfiler
profiler = LineProfiler()
profiler.add_function(add_func)
profiler.runcall(add_func, 3, 8)
# or call the function of instance
#d = Dog()
#profiler.add_function(d.say)
#profiler.runcall(d.say,'hello')
profiler.print_stats()
exit(0)


