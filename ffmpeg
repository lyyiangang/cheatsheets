# To print file metadata(e.g.size):
ffmpeg -i <file>

# To convert all m4a files to mp3
for f in *.m4a; do ffmpeg -i "$f" -acodec libmp3lame -vn -b:a 320k "${f%.m4a}.mp3"; done

# To convert video from .foo to .bar
# -g : GOP, for searchability
ffmpeg -i input.foo -vcodec bar -acodec baz -b:v 21000k -b:a 320k -g 150 -threads 4 output.bar

# To convert image sequence to video:
ffmpeg -r 18 -pattern_type glob -i '*.png' -b:v 21000k -s hd1080 -vcodec vp9 -an -pix_fmt yuv420p -deinterlace output.ext

# To combine video and audio into one file
ffmpeg -i video.ext -i audio.ext -c:v copy -c:a copy output.ext

# To add ass subtitle to the video
ffmpeg -i input_video.mp4 -vf ass=sub.ass output_video_subtitles.mp4

# rotate a video
ffmpeg -i ori.mp4 -vf "transpose=2" output.mp4

# resize img
ffmpeg -i input.jpg -vf scale=320:240 output_320x240.png

# To convert webm to mp4
ffmpeg -i input_video.webm output_video.mp4

# To convert mp4 to mov
ffmpeg -i input_video.mp4 -acodec copy -vcodec copy -f mov output_video.mov

# To convert mov to mp4
ffmpeg -i input_video.mov -vcodec copy -acodec copy output_video.mp4

# Listen to 10 seconds of audio from a video file
#
# -ss : start time
# -t  : seconds to cut
# -autoexit : closes ffplay as soon as the audio finishes
ffmpeg -ss 00:34:24.85 -t 10 -i path/to/file.mp4 -f mp3 pipe:play | ffplay -i pipe:play -autoexit

# To combine audio and video from N files:
# See also https://stackoverflow.com/questions/7333232/how-to-concatenate-two-mp4-files-using-ffmpeg
cat mylist.txt
file '/path/to/file1'
file '/path/to/file2'
file '/path/to/file3'
    
ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.mp4

# play yuv format video, pixel format could be yuv420p or nv12
ffplay -f rawvideo -pix_fmt nv12  -video_size 1920x1280 -i ./ffmpeg.yuv

# convert image to yuv format color range:[16, 255]
ffmpeg -i input.png -s 368x249 -pix_fmt yuv420p test.yuv

# convert img to full range yuv format color range:[0, 255], A1000 codec need 'scale=out_range=full'
ffmpeg -lavfi "scale=out_range=full" -i ./img_0_1684742356.24366593.jpg  -pix_fmt nv12 ffmpeg_full_rang.yuv
# crop video,-ss: 起始时间，单位为s. -t:持续时间，单位s
ffmpeg -ss 25 -t 30 -accurate_seek -i video.flv -codec copy out.mp4

# convert video to images
# - convert nv12 to png
ffmpeg  -s 1920x1536 -pix_fmt nv12 -i yuv1.yuv -f image2 -pix_fmt rgb24 %03d.png
# - convert .mp4 to jpg, fps=20
ffmpeg -i $ff -r 20 -f image2 -pix_fmt rgb24 out/%04d.jpg

# convert all images in folder to a videol
declare -i num=0;
for name in `ls`; do mv -f $name `echo $num".jpg"`;num=num+1;done
ffmpeg -f image2 -i %d.jpg video.mp4

# convert nv12 to png
ffmpeg -s 640x320 -pix_fmt nv12 -i aa.yuv  -f image2 -pix_fmt rgb24 aa.png

# disable print log.
ffmpeg -hide_banner -loglevel error 

# convert bmp to png
ffmpeg -i aa.bmp bb.png
